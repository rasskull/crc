<?php
// DRUPAL HOOKS
/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/

function imagefield_batch_upload_help($section='') {

  $output = '';

  switch ($section) {
    case "admin/help#imagefield_batch_upload":
      $output = '<p>'.  t("Imagefield batch create"). '</p>';
      break;
  }

  return $output;
} 


/**
* Valid permissions for this module
* @return array An array of valid permissions for the module
*/

function imagefield_batch_upload_perm() {
  return array('administer imagefield batch create', 'create batch imagefield entries');
} 


/**
 * Implementation of hook_menu().
 */
 
function imagefield_batch_upload_menu() {

    $items = array();
    /*
    $items["admin/config/imagefield_batch_create_settings"] = array(
        'title' => t('Imagefield batch creation settings'),
    'page callback' => 'imagefield_batch_upload_page', 
    'description' => t('Allows batch creation of imagefield entries on a node from files uploaded via ftp'),
        'access arguments' => array('administer imagefield batch create'),
      );
      */
    $items["admin/imagefield_batch_create"] = array(
        'title' => t('Imagefield batch creation'),
		'page callback' => 'imagefield_batch_upload_page', 
		'description' => t('Allows batch creation of imagefield entries on a node from files uploaded via ftp'),
        'access arguments' => array('create batch imagefield entries'),
      );
    return $items;
}


function imagefield_batch_upload_page() {
  return drupal_get_form('imagefield_batch_upload_page_form');
}

function imagefield_batch_upload_page_form() {
  
  $form['imagefield_batch_upload_files_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Full server path to image files'),
    '#default_value' => variable_get('imagefield_batch_upload_files_path', ''),
  );


  $result = db_query('SELECT n.nid, n.title, n.created
  FROM {node} n WHERE n.type = :type ORDER BY n.title', array(':type' => 'gallery_sub'));
  
  foreach ($result as $record) {
    // Perform operations on $node->title, etc. here.
    $nodes[$record->nid] = $record->title;
  }

  $form['node'] = array(
       '#type' => 'select',
       '#title' => t('Selected'),
       '#options' => $nodes,
       '#description' => t('Choose the photo gallery to create batch imagefields on.'),
   );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Create imagefield entries'),
  );
  return $form;
}

function imagefield_batch_upload_page_form_submit($form_id, $form_values) {

  //var_dump($form_values['values']['imagefield_batch_upload_files_path']);
  variable_set('imagefield_batch_upload_files_path', $form_values['values']['imagefield_batch_upload_files_path']); 

  $folder=dir($form_values['values']['imagefield_batch_upload_files_path']);
 
  while($folderEntry=$folder->read()) {


    // load node
    $node = node_load($form_values['values']['node']);
    if(!$node) {
      form_set_error(NULL, 'Node was unable to be loaded');
      return;
    }

    // if file is not a jpg continue through loop
    if(!strstr($folderEntry, '.jpg')) {
      //form_set_error(NULL, 'File needs to be a jpg');
      continue;
    }

    // check name against database files


    // remove slash and add back in to make sure it's there
    $uri = rtrim($form_values['values']['imagefield_batch_upload_files_path'], '/');
    $file_path = $uri . '/' . $folderEntry;
    
    // Get the file size
    $file = (object) array(
            'uid' => 1,
            'uri' => $file_path,
            'filemime' => file_get_mimetype($file_path),
            'status' => 1,
    );

    // Copy the file to the Drupal files directory 
    if(!($file = file_copy($file,'public://gallery_photos'))) {
      //form_set_error(NULL, 'Failed to move file: $file');
      //return;
      $errored_files[] = $folderEntry;

    } else {
      // file_move might change the name of the file
      //$name = basename($file);

      $uploaded_files[] = $folderEntry;
      unlink($file_path);

    }
    
    $node->field_gallery_photo[$node->language][$file->fid] = (array) $file;
    
  }
 
  $folder->close();

  // save node object
  node_save($node);
  $message = '';
  if(count($uploaded_files)>0) {
  $message .= 'The following files were successfully moved to the field "field_gallery_photo" field on the node "'.$node->title.'" <br /> ' . join(', ', $uploaded_files);
  }
  if(count($errored_files)>0) {
    $message .= '<br />The following files errored out <br /> ' . join(', ', $errored_files);
  }
  if(count($uploaded_files)<1) {
    $message = 'There were no files to transfer.';
  }

  drupal_set_message($message);
}




// no ending php tag!
